const TelegramBot = require('node-telegram-bot-api');
const scdl = require('soundcloud-downloader').default;
const fs = require('fs');

// === üîê –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø ===
const token = process.env.TELEGRAM_TOKEN || '8119729959:AAETYnCygCDclelR_Y5P1O7xIP0cbHkQuVQ';
const clientId = 'vF3vRMFpTgZzqzDzsdgJ7zD4gmZTY4vK'; // –ø—É–±–ª–∏—á–Ω—ã–π client_id

if (!token) {
  throw new Error('‚ùå –ù–µ —É–∫–∞–∑–∞–Ω Telegram Token!');
}

const bot = new TelegramBot(token, { polling: true });

// === üì• –û–ë–†–ê–ë–û–¢–ö–ê –°–û–û–ë–©–ï–ù–ò–ô ===
bot.on('message', async (msg) => {
  const chatId = msg.chat.id;
  const url = msg.text?.trim();

  if (!url || !url.startsWith('http') || !url.includes('soundcloud.com')) {
    return bot.sendMessage(chatId, 'üìé –û—Ç–ø—Ä–∞–≤—å —Å—Å—ã–ª–∫—É –Ω–∞ —Ç—Ä–µ–∫ –∏–ª–∏ –ø–ª–µ–π–ª–∏—Å—Ç SoundCloud');
  }

  bot.sendMessage(chatId, '‚è¨ –ó–∞–≥—Ä—É–∂–∞—é —Ç—Ä–µ–∫...');

  try {
    const info = await scdl.getInfo(url, clientId);

    if (!info || !info.title) throw new Error('–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç—Ä–µ–∫–µ –Ω–µ –ø–æ–ª—É—á–µ–Ω–∞');

    const fileName = `track_${Date.now()}.mp3`;
    const stream = await scdl.download(url, clientId);
    const writeStream = fs.createWriteStream(fileName);

    stream.pipe(writeStream);

    writeStream.on('finish', () => {
      bot.sendAudio(chatId, fileName, {
        title: info.title,
        performer: info.user?.username || 'SoundCloud',
      }).then(() => {
        fs.unlinkSync(fileName); // —É–¥–∞–ª—è–µ–º —Ñ–∞–π–ª –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏
      });
    });

    writeStream.on('error', (err) => {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Å–∏ —Ñ–∞–π–ª–∞:', err);
      bot.sendMessage(chatId, '‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞.');
    });

  } catch (err) {
    console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏:', err.message || err);
    bot.sendMessage(chatId, '‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ç—Ä–µ–∫. –í–æ–∑–º–æ–∂–Ω–æ, –æ–Ω –∑–∞—â–∏—â—ë–Ω –∏–ª–∏ —Å—Å—ã–ª–∫–∞ –Ω–µ–≤–µ—Ä–Ω–∞.');
  }
});
