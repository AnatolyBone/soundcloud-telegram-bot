<!DOCTYPE html>
<html>
<head>
  <meta charset="UTF-8" />
  <title>Admin Dashboard</title>

  <link rel="stylesheet" href="https://cdn.datatables.net/1.13.6/css/jquery.dataTables.min.css">
  <script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
  <script src="https://cdn.datatables.net/1.13.6/js/jquery.dataTables.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

  <style>
    body { font-family: Arial, sans-serif; margin: 20px; }
    h1, h3 { margin-bottom: 10px; }
    .chart-container { width: 100%; max-width: 900px; margin-bottom: 40px; height: 250px; }
    .inactive { color: #aaa; }
    .pagination-controls {
      margin-top: 10px;
      margin-bottom: 20px;
    }
    .pagination-controls button {
      margin-right: 5px;
      padding: 5px 10px;
      cursor: pointer;
    }
    pre {
      background: #f4f4f4;
      border: 1px solid #ddd;
      padding: 10px;
      max-height: 300px;
      overflow: auto;
    }
  </style>
</head>
<body>
  <h1>üìä Admin Dashboard</h1>

  <form method="GET" action="/dashboard" style="margin-bottom: 20px;">
    <label><input type="checkbox" name="showInactive" value="true" <%= showInactive ? 'checked' : '' %>> –ü–æ–∫–∞–∑–∞—Ç—å –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö</label>
    <button type="submit">–û–±–Ω–æ–≤–∏—Ç—å</button>
    <a href="/export" style="margin-left: 20px;">üìÅ –≠–∫—Å–ø–æ—Ä—Ç –≤ CSV</a>
  </form>

  <% if (showInactive) { %>
    <form method="POST" action="/delete-inactive">
      <button type="submit" onclick="return confirm('–£–¥–∞–ª–∏—Ç—å –≤—Å–µ—Ö –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π?')">üóë –£–¥–∞–ª–∏—Ç—å –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö</button>
    </form>
  <% } %>

  <p><strong>–í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:</strong> <%= stats.totalUsers %></p>
  <p><strong>–ó–∞–≥—Ä—É–∑–æ–∫:</strong> <%= stats.totalDownloads %></p>
  <p><strong>–¢–∞—Ä–∏—Ñ—ã:</strong> Free: <%= stats.free %>, Plus: <%= stats.plus %>, Pro: <%= stats.pro %>, Unlim: <%= stats.unlimited %></p>

  <div class="chart-container"><canvas id="combinedChart"></canvas></div>

  <div class="chart-container"><canvas id="hourActivityChart"></canvas></div>
  <div class="chart-container"><canvas id="weekdayActivityChart"></canvas></div>

  <!-- –ù–æ–≤—ã–π –±–ª–æ–∫ —Å —Ç–µ–ø–ª–æ–≤–æ–π –∫–∞—Ä—Ç–æ–π -->
  <h3>üóì –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ –¥–∞—Ç–µ –∏ —á–∞—Å—É (—Ç–µ–ø–ª–æ–≤–∞—è –∫–∞—Ä—Ç–∞)</h3>
  <div class="chart-container" style="height: 400px;">
    <canvas id="heatmapChart"></canvas>
  </div>

  <!-- –í—ã–≤–æ–¥ JSON –¥–∞–Ω–Ω—ã—Ö —Ç–µ–ø–ª–æ–≤–æ–π –∫–∞—Ä—Ç—ã –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ -->
  <details>
    <summary>–ü–æ–∫–∞–∑–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ø–æ –¥–∞—Ç–µ –∏ —á–∞—Å—É (JSON)</summary>
    <pre><%= JSON.stringify(stats.activityByDayHour || {}, null, 2) %></pre>
  </details>

  <h3>üïí –° —Ç–∞—Ä–∏—Ñ–æ–º, –∏—Å—Ç–µ–∫–∞—é—â–∏–º –≤ –±–ª–∏–∂–∞–π—à–∏–µ 3 –¥–Ω—è</h3>

  <form id="paginationForm" method="GET" action="/dashboard">
    <input type="hidden" name="showInactive" value="<%= showInactive ? 'true' : '' %>">
    <label>–ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –ø–æ: 
      <select name="expiringLimit" id="expiringLimit" onchange="document.getElementById('paginationForm').submit()">
        <option value="5" <%= expiringLimit == 5 ? 'selected' : '' %>>5</option>
        <option value="10" <%= expiringLimit == 10 ? 'selected' : '' %>>10</option>
        <option value="25" <%= expiringLimit == 25 ? 'selected' : '' %>>25</option>
        <option value="50" <%= expiringLimit == 50 ? 'selected' : '' %>>50</option>
        <option value="100" <%= expiringLimit == 100 ? 'selected' : '' %>>100</option>
      </select>
    </label>
    <input type="hidden" name="expiringOffset" id="expiringOffset" value="<%= expiringOffset || 0 %>">
  </form>

  <% if (expiringSoon.length === 0) { %>
    <p>–ù–µ—Ç —Ç–∞–∫–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</p>
  <% } else { %>
    <ul>
      <% expiringSoon.forEach(u => { %>
        <li><%= u.first_name %> (<%= u.username ? '@' + u.username : '‚Äî' %>) ‚Äî –¥–æ <%= new Date(u.premium_until).toLocaleDateString() %></li>
      <% }) %>
    </ul>

    <div class="pagination-controls">
      <% if (expiringOffset > 0) { %>
        <button onclick="changePage(-1)">‚Üê –ù–∞–∑–∞–¥</button>
      <% } %>
      <% if (expiringOffset + expiringLimit < expiringCount) { %>
        <button onclick="changePage(1)">–í–ø–µ—Ä—ë–¥ ‚Üí</button>
      <% } %>
      <span>–ü–æ–∫–∞–∑–∞–Ω–æ <%= expiringOffset + 1 %>‚Äì<%= Math.min(expiringOffset + expiringLimit, expiringCount) %> –∏–∑ <%= expiringCount %></span>
    </div>
  <% } %>

  <h3>üìà –ò—Å—Ç–æ—á–Ω–∏–∫–∏ —Ç—Ä–∞—Ñ–∏–∫–∞</h3>
  <table border="1" cellpadding="5" cellspacing="0">
    <thead>
      <tr><th>–ò—Å—Ç–æ—á–Ω–∏–∫</th><th>–ö–æ–ª-–≤–æ</th></tr>
    </thead>
    <tbody>
      <% referralStats.forEach(source => { %>
        <tr>
          <td><%= source.source || '‚Äî' %></td>
          <td><%= source.count %></td>
        </tr>
      <% }) %>
    </tbody>
  </table>

  <h3>üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ (<%= users.length %>)</h3>
  <table id="usersTable" class="display">
    <thead>
      <tr>
        <th>ID</th><th>Username</th><th>–ò–º—è</th><th>–°–∫–∞—á–∞–Ω–æ</th><th>–õ–∏–º–∏—Ç</th>
        <th>–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è</th><th>–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å</th><th>–°—Ç–∞—Ç—É—Å</th><th>–ò—Å—Ç–æ—á–Ω–∏–∫</th><th>–¢–∞—Ä–∏—Ñ</th>
      </tr>
    </thead>
    <tbody>
      <% users.forEach(user => { %>
        <tr class="<%= !user.active ? 'inactive' : '' %>">
          <td><%= user.id %></td>
          <td><%= user.username ? '@' + user.username : '' %></td>
          <td>
            <%= user.first_name %> 
            <% if (new Date(user.created_at) > Date.now() - 24 * 60 * 60 * 1000) { %>üÜï<% } %>
          </td>
          <td><%= user.total_downloads || 0 %></td>
          <td><%= user.premium_limit %></td>
          <td><%= user.created_at ? new Date(user.created_at).toLocaleDateString() : '-' %></td>
          <td><%= user.last_active ? new Date(user.last_active).toLocaleDateString() : '-' %></td>
          <td>
            <% if (!user.last_active) { %>üî¥
            <% } else if (new Date(user.last_active) > Date.now() - 24 * 60 * 60 * 1000) { %>üü¢
            <% } else { %>üü°<% } %>
          </td>
          <td><%= user.referral_source || '‚Äî' %></td>
          <td>
            <form method="POST" action="/set-tariff" style="margin:0;">
              <input type="hidden" name="userId" value="<%= user.id %>">
              <select name="limit">
                <option value="10" <%= user.premium_limit === 10 ? 'selected' : '' %>>Free</option>
                <option value="50" <%= user.premium_limit === 50 ? 'selected' : '' %>>Plus</option>
                <option value="100" <%= user.premium_limit === 100 ? 'selected' : '' %>>Pro</option>
                <option value="1000" <%= user.premium_limit >= 1000 ? 'selected' : '' %>>Unlimited</option>
              </select>
              <button type="submit">–°–æ—Ö—Ä–∞–Ω–∏—Ç—å</button>
            </form>
          </td>
        </tr>
      <% }) %>
    </tbody>
  </table>

  <h3>üì¢ –ú–∞—Å—Å–æ–≤–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞</h3>
  <form method="POST" action="/broadcast" enctype="multipart/form-data">
    <textarea name="message" rows="4" cols="60" placeholder="–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç" required></textarea><br>
    <input type="file" name="audio"><br>
    <button type="submit">–û—Ç–ø—Ä–∞–≤–∏—Ç—å</button>
  </form>

  <script>
    // DataTables –∏ –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏—è
    $(document).ready(() => {
      $('#usersTable').DataTable({
        order: [[5, 'desc']],
        language: {
          search: "–ü–æ–∏—Å–∫:",
          lengthMenu: "–ü–æ–∫–∞–∑–∞—Ç—å _MENU_ –∑–∞–ø–∏—Å–µ–π",
          info: "–ü–æ–∫–∞–∑–∞–Ω–æ _START_ - _END_ –∏–∑ _TOTAL_",
          paginate: {
            first: "–ü–µ—Ä–≤–∞—è", last: "–ü–æ—Å–ª–µ–¥–Ω—è—è", next: "–°–ª–µ–¥—É—é—â–∞—è", previous: "–ü—Ä–µ–¥—ã–¥—É—â–∞—è"
          },
          zeroRecords: "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö"
        }
      });
    });

    // –ì—Ä–∞—Ñ–∏–∫ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏, –∑–∞–≥—Ä—É–∑–æ–∫, –∞–∫—Ç–∏–≤–Ω—ã—Ö
    const combinedLabels = <%- JSON.stringify(Object.keys(stats.registrationsByDate)) %>;
    const registrationsData = <%- JSON.stringify(Object.values(stats.registrationsByDate)) %>;
    const downloadsData = <%- JSON.stringify(Object.values(stats.downloadsByDate)) %>;
    const activeUsersData = <%- JSON.stringify(Object.values(stats.activeByDate)) %>;

    new Chart(document.getElementById('combinedChart'), {
      type: 'line',
      data: {
        labels: combinedLabels,
        datasets: [
          {
            label: '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏',
            data: registrationsData,
            borderColor: 'blue',
            backgroundColor: 'lightblue',
            fill: false,
            tension: 0.3,
          },
          {
            label: '–ó–∞–≥—Ä—É–∑–∫–∏',
            data: downloadsData,
            borderColor: 'green',
            backgroundColor: 'lightgreen',
            fill: false,
            tension: 0.3,
          },
          {
            label: '–ê–∫—Ç–∏–≤–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏',
            data: activeUsersData,
            borderColor: 'orange',
            backgroundColor: 'moccasin',
            fill: false,
            tension: 0.3,
          }
        ]
      },
      options: {
        responsive: true,
        interaction: { mode: 'index', intersect: false },
        stacked: false,
        scales: { y: { beginAtZero: true } }
      }
    });

    // –ì—Ä–∞—Ñ–∏–∫ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ø–æ —á–∞—Å–∞–º
    const hoursLabels = Array.from({length:24}, (_,i) => i + ':00');
    const activityByHour = <%- JSON.stringify(stats.activityByHour || Array(24).fill(0)) %>;

    new Chart(document.getElementById('hourActivityChart'), {
      type: 'bar',
      data: {
        labels: hoursLabels,
        datasets: [{
          label: '–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø–æ —á–∞—Å–∞–º',
          data: activityByHour,
          backgroundColor: 'rgba(75, 192, 192, 0.6)',
          borderColor: 'rgba(75, 192, 192, 1)',
          borderWidth: 1
        }]
      },
      options: {
        scales: {
          y: { beginAtZero: true },
          x: { title: { display: true, text: '–ß–∞—Å—ã' } }
        }
      }
    });

    // –ì—Ä–∞—Ñ–∏–∫ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ø–æ –¥–Ω—è–º –Ω–µ–¥–µ–ª–∏ (0=–≤—Å)
    const weekdaysLabels = ['–í—Å', '–ü–Ω', '–í—Ç', '–°—Ä', '–ß—Ç', '–ü—Ç', '–°–±'];
    const activityByWeekday = <%- JSON.stringify(stats.activityByWeekday || Array(7).fill(0)) %>;

    new Chart(document.getElementById('weekdayActivityChart'), {
      type: 'bar',
      data: {
        labels: weekdaysLabels,
        datasets: [{
          label: '–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø–æ –¥–Ω—è–º –Ω–µ–¥–µ–ª–∏',
          data: activityByWeekday,
          backgroundColor: 'rgba(153, 102, 255, 0.6)',
          borderColor: 'rgba(153, 102, 255, 1)',
          borderWidth: 1
        }]
      },
      options: {
        scales: {
          y: { beginAtZero: true },
          x: { title: { display: true, text: '–î–Ω–∏ –Ω–µ–¥–µ–ª–∏' } }
        }
      }
    });

    // –¢–µ–ø–ª–æ–≤–∞—è –∫–∞—Ä—Ç–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ø–æ –¥–∞—Ç–µ –∏ —á–∞—Å—É
    const activityByDayHour = <%- JSON.stringify(stats.activityByDayHour || {}) %>;

    const days = Object.keys(activityByDayHour).sort();
    const hours = Array.from({length: 24}, (_, i) => i);

    const heatmapDatasets = hours.map(hour => ({
      label: hour + ':00',
      data: days.map(day => (activityByDayHour[day] ? activityByDayHour[day][hour] : 0)),
      backgroundColor: function(context) {
        const value = context.dataset.data[context.dataIndex];
        const alpha = Math.min(value / 3, 1); // —Ü–≤–µ—Ç —è—Ä—á–µ —á–µ–º —Ä–∞–Ω—å—à–µ
        return `rgba(54, 162, 235, ${alpha})`;
      },
      borderWidth: 0
    }));

    const ctxHeatmap = document.getElementById('heatmapChart').getContext('2d');
    new Chart(ctxHeatmap, {
      type: 'bar',
      data: {
        labels: days,
        datasets: heatmapDatasets
      },
      options: {
        indexAxis: 'y',
        responsive: true,
        scales: {
          x: {
            stacked: true,
            beginAtZero: true,
            title: { display: true, text: '–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å' }
          },
          y: {
            stacked: true,
            title: { display: true, text: '–î–∞—Ç–∞' },
            ticks: { autoSkip: true, maxTicksLimit: 10 }
          }
        },
        plugins: {
          legend: { display: true, position: 'top' },
          tooltip: {
            callbacks: {
              label: ctx => `${ctx.dataset.label}: ${ctx.parsed.x}`
            }
          }
        }
      }
    });

    // –ü–∞–≥–∏–Ω–∞—Ü–∏—è –¥–ª—è –∏—Å—Ç–µ–∫–∞—é—â–∏—Ö —Ç–∞—Ä–∏—Ñ–æ–≤
    function changePage(delta) {
      const offsetInput = document.getElementById('expiringOffset');
      let offset = parseInt(offsetInput.value, 10) || 0;
      const limit = parseInt(document.getElementById('expiringLimit').value, 10) || 10;
      offset += delta * limit;
      if (offset < 0) offset = 0;
      offsetInput.value = offset;
      document.getElementById('paginationForm').submit();
    }
  </script>
</body>
</html>