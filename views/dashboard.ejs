<!DOCTYPE html>
<html>
<head>
  <meta charset="UTF-8" />
  <title>Admin Dashboard</title>

  <!-- Bootstrap 5 Dark Theme CSS -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" >
  
  <!-- DataTables CSS —Å Bootstrap 5 -->
  <link rel="stylesheet" href="https://cdn.datatables.net/1.13.6/css/dataTables.bootstrap5.min.css" />
  
  <!-- jQuery –∏ DataTables JS -->
  <script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
  <script src="https://cdn.datatables.net/1.13.6/js/jquery.dataTables.min.js"></script>
  <script src="https://cdn.datatables.net/1.13.6/js/dataTables.bootstrap5.min.js"></script>
  
  <!-- Chart.js -->
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

  <style>
    body {
      background-color: #121212;
      color: #eee;
      font-family: Arial, sans-serif;
      margin: 20px;
    }
    a {
      color: #80bdff;
    }
    a:hover {
      color: #a8d0ff;
    }
    h1, h3 {
      margin-bottom: 10px;
    }
    .chart-container {
      width: 100%;
      max-width: 900px;
      margin-bottom: 40px;
      height: 250px;
    }
    .inactive {
      color: #777 !important;
      opacity: 0.7;
    }
    .pagination-controls {
      margin-top: 10px;
      margin-bottom: 20px;
    }
    .pagination-controls button {
      margin-right: 5px;
      padding: 5px 10px;
      cursor: pointer;
      background-color: #1f1f1f;
      border: 1px solid #444;
      color: #eee;
    }
    .pagination-controls button:hover {
      background-color: #333;
    }
    pre {
      background: #222;
      border: 1px solid #444;
      padding: 10px;
      max-height: 300px;
      overflow: auto;
      color: #ccc;
    }
    table.dataTable thead {
      background-color: #1e1e1e;
      color: #eee;
    }
    table.dataTable tbody tr:hover {
      background-color: #2c2c2c !important;
    }
    /* Bootstrap override –¥–ª—è —Ñ–æ—Ä–º—ã –∏ –∫–Ω–æ–ø–æ–∫ */
    form {
      margin-bottom: 20px;
    }
    button, select, input[type="checkbox"] {
      cursor: pointer;
    }
  </style>
</head>
<body>
  <div class="container-fluid">
    <h1>üìä Admin Dashboard</h1>

    <form method="GET" action="/dashboard" class="d-flex align-items-center gap-3">
      <div class="form-check">
        <input type="checkbox" class="form-check-input" id="showInactive" name="showInactive" value="true" <%= showInactive ? 'checked' : '' %>>
        <label for="showInactive" class="form-check-label">–ü–æ–∫–∞–∑–∞—Ç—å –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö</label>
      </div>
      <button type="submit" class="btn btn-primary btn-sm">–û–±–Ω–æ–≤–∏—Ç—å</button>
      <a href="/export" class="btn btn-outline-light btn-sm ms-3">üìÅ –≠–∫—Å–ø–æ—Ä—Ç –≤ CSV</a>
    </form>

    <% if (showInactive) { %>
      <form method="POST" action="/delete-inactive" onsubmit="return confirm('–£–¥–∞–ª–∏—Ç—å –≤—Å–µ—Ö –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π?')">
        <button type="submit" class="btn btn-danger btn-sm mb-3">üóë –£–¥–∞–ª–∏—Ç—å –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö</button>
      </form>
    <% } %>

    <p><strong>–í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:</strong> <%= stats.totalUsers %></p>
    <p><strong>–ó–∞–≥—Ä—É–∑–æ–∫:</strong> <%= stats.totalDownloads %></p>
    <p><strong>–¢–∞—Ä–∏—Ñ—ã:</strong> Free: <%= stats.free %>, Plus: <%= stats.plus %>, Pro: <%= stats.pro %>, Unlim: <%= stats.unlimited %></p>

    <div class="chart-container"><canvas id="combinedChart"></canvas></div>

    <div class="chart-container"><canvas id="hourActivityChart"></canvas></div>
    <div class="chart-container"><canvas id="weekdayActivityChart"></canvas></div>

    <h3>üóì –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ –¥–∞—Ç–µ –∏ —á–∞—Å—É (—Ç–µ–ø–ª–æ–≤–∞—è –∫–∞—Ä—Ç–∞)</h3>
    <div class="chart-container" style="height: 400px;">
      <canvas id="heatmapChart"></canvas>
    </div>

    <details>
      <summary>–ü–æ–∫–∞–∑–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ø–æ –¥–∞—Ç–µ –∏ —á–∞—Å—É (JSON)</summary>
      <pre><%= JSON.stringify(stats.activityByDayHour || {}, null, 2) %></pre>
    </details>

    <h3>üïí –° —Ç–∞—Ä–∏—Ñ–æ–º, –∏—Å—Ç–µ–∫–∞—é—â–∏–º –≤ –±–ª–∏–∂–∞–π—à–∏–µ 3 –¥–Ω—è</h3>

    <form id="paginationForm" method="GET" action="/dashboard" class="d-flex align-items-center gap-3 mb-3">
      <input type="hidden" name="showInactive" value="<%= showInactive ? 'true' : '' %>">
      <label for="expiringLimit">–ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –ø–æ:</label>
      <select name="expiringLimit" id="expiringLimit" class="form-select form-select-sm w-auto" onchange="document.getElementById('paginationForm').submit()">
        <option value="5" <%= expiringLimit == 5 ? 'selected' : '' %>>5</option>
        <option value="10" <%= expiringLimit == 10 ? 'selected' : '' %>>10</option>
        <option value="25" <%= expiringLimit == 25 ? 'selected' : '' %>>25</option>
        <option value="50" <%= expiringLimit == 50 ? 'selected' : '' %>>50</option>
        <option value="100" <%= expiringLimit == 100 ? 'selected' : '' %>>100</option>
      </select>
      <input type="hidden" name="expiringOffset" id="expiringOffset" value="<%= expiringOffset || 0 %>">
    </form>

    <% if (expiringSoon.length === 0) { %>
      <p>–ù–µ—Ç —Ç–∞–∫–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</p>
    <% } else { %>
      <ul class="list-group mb-3" style="max-width: 500px;">
        <% expiringSoon.forEach(u => { %>
          <li class="list-group-item d-flex justify-content-between align-items-center">
            <span><%= u.first_name %> (<%= u.username ? '@' + u.username : '‚Äî' %>)</span>
            <span>–¥–æ <%= new Date(u.premium_until).toLocaleDateString() %></span>
          </li>
        <% }) %>
      </ul>

      <div class="pagination-controls">
        <% if (expiringOffset > 0) { %>
          <button class="btn btn-outline-light btn-sm" onclick="changePage(-1)">‚Üê –ù–∞–∑–∞–¥</button>
        <% } %>
        <% if (expiringOffset + expiringLimit < expiringCount) { %>
          <button class="btn btn-outline-light btn-sm" onclick="changePage(1)">–í–ø–µ—Ä—ë–¥ ‚Üí</button>
        <% } %>
        <span>–ü–æ–∫–∞–∑–∞–Ω–æ <%= expiringOffset + 1 %>‚Äì<%= Math.min(expiringOffset + expiringLimit, expiringCount) %> –∏–∑ <%= expiringCount %></span>
      </div>
    <% } %>

    <h3>üìà –ò—Å—Ç–æ—á–Ω–∏–∫–∏ —Ç—Ä–∞—Ñ–∏–∫–∞</h3>
    <table class="table table-sm table-dark table-striped table-bordered" style="max-width: 400px;">
      <thead>
        <tr><th>–ò—Å—Ç–æ—á–Ω–∏–∫</th><th>–ö–æ–ª-–≤–æ</th></tr>
      </thead>
      <tbody>
        <% referralStats.forEach(source => { %>
          <tr>
            <td><%= source.source || '‚Äî' %></td>
            <td><%= source.count %></td>
          </tr>
        <% }) %>
      </tbody>
    </table>

    <h3>üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ (<%= users.length %>)</h3>
    <table id="usersTable" class="table table-sm table-dark table-striped table-bordered display" style="width:100%">
      <thead>
        <tr>
          <th>ID</th><th>Username</th><th>–ò–º—è</th><th>–°–∫–∞—á–∞–Ω–æ</th><th>–õ–∏–º–∏—Ç</th>
          <th>–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è</th><th>–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å</th><th>–°—Ç–∞—Ç—É—Å</th><th>–ò—Å—Ç–æ—á–Ω–∏–∫</th><th>–¢–∞—Ä–∏—Ñ</th>
        </tr>
      </thead>
      <tbody>
        <% users.forEach(user => { %>
          <tr class="<%= !user.active ? 'inactive' : '' %>">
            <td><%= user.id %></td>
            <td><%= user.username ? '@' + user.username : '' %></td>
            <td>
              <%= user.first_name %> 
              <% if (new Date(user.created_at) > Date.now() - 24 * 60 * 60 * 1000) { %>üÜï<% } %>
            </td>
            <td><%= user.total_downloads || 0 %></td>
            <td><%= user.premium_limit %></td>
            <td><%= user.created_at ? new Date(user.created_at).toLocaleDateString() : '-' %></td>
            <td><%= user.last_active ? new Date(user.last_active).toLocaleDateString() : '-' %></td>
            <td>
              <% if (!user.last_active) { %>üî¥
              <% } else if (new Date(user.last_active) > Date.now() - 24 * 60 * 60 * 1000) { %>üü¢
              <% } else { %>üü°<% } %>
            </td>
            <td><%= user.referral_source || '‚Äî' %></td>
            <td>
              <form method="POST" action="/set-tariff" style="margin:0;" class="d-flex gap-2 align-items-center">
                <input type="hidden" name="userId" value="<%= user.id %>">
                <select name="limit" class="form-select form-select-sm">
                  <option value="10" <%= user.premium_limit === 10 ? 'selected' : '' %>>Free</option>
                  <option value="50" <%= user.premium_limit === 50 ? 'selected' : '' %>>Plus</option>
                  <option value="100" <%= user.premium_limit === 100 ? 'selected' : '' %>>Pro</option>
                  <option value="1000" <%= user.premium_limit >= 1000 ? 'selected' : '' %>>Unlimited</option>
                </select>
                <button type="submit" class="btn btn-sm btn-primary">–°–æ—Ö—Ä–∞–Ω–∏—Ç—å</button>
              </form>
            </td>
          </tr>
        <% }) %>
      </tbody>
    </table>

    <h3>üì¢ –ú–∞—Å—Å–æ–≤–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞</h3>
    <form method="POST" action="/broadcast" enctype="multipart/form-data" class="mb-5">
      <textarea name="message" rows="4" class="form-control mb-2" placeholder="–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç" required></textarea>
      <input type="file" name="audio" class="form-control mb-2">
      <button type="submit" class="btn btn-success">–û—Ç–ø—Ä–∞–≤–∏—Ç—å</button>
    </form>
  </div>

  <script>
    // DataTables —Å Bootstrap 5 –∏ —Ä—É—Å—Å–∫–æ–π –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏–µ–π
    $(document).ready(() => {
      $('#usersTable').DataTable({
        order: [[5, 'desc']],
        language: {
          search: "–ü–æ–∏—Å–∫:",
          lengthMenu: "–ü–æ–∫–∞–∑–∞—Ç—å _MENU_ –∑–∞–ø–∏—Å–µ–π",
          info: "–ü–æ–∫–∞–∑–∞–Ω–æ _START_ - _END_ –∏–∑ _TOTAL_",
          paginate: {
            first: "–ü–µ—Ä–≤–∞—è", last: "–ü–æ—Å–ª–µ–¥–Ω—è—è", next: "–°–ª–µ–¥—É—é—â–∞—è", previous: "–ü—Ä–µ–¥—ã–¥—É—â–∞—è"
          },
          zeroRecords: "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö"
        }
      });
    });

    // –î–∞–Ω–Ω—ã–µ –¥–ª—è –≥—Ä–∞—Ñ–∏–∫–æ–≤
    const combinedLabels = <%- JSON.stringify(Object.keys(stats.registrationsByDate)) %>;
    const registrationsData = <%- JSON.stringify(Object.values(stats.registrationsByDate)) %>;
    const downloadsData = <%- JSON.stringify(Object.values(stats.downloadsByDate)) %>;
    const activeUsersData = <%- JSON.stringify(Object.values(stats.activeByDate)) %>;

    new Chart(document.getElementById('combinedChart'), {
      type: 'line',
      data: {
        labels: combinedLabels,
        datasets: [
          {
            label: '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏',
            data: registrationsData,
            borderColor: '#2196F3',
            backgroundColor: 'rgba(33, 150, 243, 0.5)',
            fill: true,
            tension: 0.3,
          },
          {
            label: '–ó–∞–≥—Ä—É–∑–∫–∏',
            data: downloadsData,
            borderColor: '#4CAF50',
            backgroundColor: 'rgba(76, 175, 80, 0.5)',
            fill: true,
            tension: 0.3,
          },
          {
            label: '–ê–∫—Ç–∏–≤–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏',
            data: activeUsersData,
            borderColor: '#FF9800',
            backgroundColor: 'rgba(255, 152, 0, 0.5)',
            fill: true,
            tension: 0.3,
          }
        ]
      },
      options: {
        responsive: true,
        interaction: { mode: 'index', intersect: false },
        stacked: false,
        scales: {
          y: { beginAtZero: true, ticks: { color: '#eee' } },
          x: { ticks: { color: '#eee' } }
        },
        plugins: {
          legend: { labels: { color: '#eee' } }
        }
      }
    });

    const hoursLabels = Array.from({length:24}, (_,i) => i + ':00');
    const activityByHour = <%- JSON.stringify(stats.activityByHour || Array(24).fill(0)) %>;

    new Chart(document.getElementById('hourActivityChart'), {
      type: 'bar',
      data: {
        labels: hoursLabels,
        datasets: [{
          label: '–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø–æ —á–∞—Å–∞–º',
          data: activityByHour,
          backgroundColor: 'rgba(75, 192, 192, 0.8)',
          borderColor: 'rgba(75, 192, 192, 1)',
          borderWidth: 1
        }]
      },
      options: {
        scales: {
          y: { beginAtZero: true, ticks: { color: '#eee' } },
          x: { title: { display: true, text: '–ß–∞—Å—ã', color: '#eee' }, ticks: { color: '#eee' } }
        },
        plugins: {
          legend: { labels: { color: '#eee' } }
        },
        responsive: true
      }
    });

    const weekdaysLabels = ['–í—Å', '–ü–Ω', '–í—Ç', '–°—Ä', '–ß—Ç', '–ü—Ç', '–°–±'];
    const activityByWeekday = <%- JSON.stringify(stats.activityByWeekday || Array(7).fill(0)) %>;

    new Chart(document.getElementById('weekdayActivityChart'), {
      type: 'bar',
      data: {
        labels: weekdaysLabels,
        datasets: [{
          label: '–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø–æ –¥–Ω—è–º –Ω–µ–¥–µ–ª–∏',
          data: activityByWeekday,
          backgroundColor: 'rgba(153, 102, 255, 0.8)',
          borderColor: 'rgba(153, 102, 255, 1)',
          borderWidth: 1
        }]
      },
      options: {
        scales: {
          y: { beginAtZero: true, ticks: { color: '#eee' } },
          x: { title: { display: true, text: '–î–Ω–∏ –Ω–µ–¥–µ–ª–∏', color: '#eee' }, ticks: { color: '#eee' } }
        },
        plugins: {
          legend: { labels: { color: '#eee' } }
        },
        responsive: true
      }
    });

    const activityByDayHour = <%- JSON.stringify(stats.activityByDayHour || {}) %>;

    const days = Object.keys(activityByDayHour).sort();
    const hours = Array.from({length: 24}, (_, i) => i);

    const heatmapDatasets = hours.map(hour => ({
      label: hour + ':00',
      data: days.map(day => (activityByDayHour[day] ? activityByDayHour[day][hour] : 0)),
      backgroundColor: function(context) {
        const value = context.dataset.data[context.dataIndex];
        const alpha = Math.max(Math.min(value / 3, 1), 0.3);
        return `rgba(54, 162, 235, ${alpha})`;
      },
      borderWidth: 0
    }));

    const ctxHeatmap = document.getElementById('heatmapChart').getContext('2d');
    new Chart(ctxHeatmap, {
      type: 'bar',
      data: {
        labels: days,
        datasets: heatmapDatasets
      },
      options: {
        indexAxis: 'y',
        responsive: true,
        scales: {
          x: {
            stacked: true,
            beginAtZero: true,
            title: { display: true, text: '–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å', color: '#eee' },
            ticks: { color: '#eee' }
          },
          y: {
            stacked: true,
            title: { display: true, text: '–î–∞—Ç–∞', color: '#eee' },
            ticks: { autoSkip: true, maxTicksLimit: 10, color: '#eee' }
          }
        },
        plugins: {
          legend: { display: true, position: 'top', labels: { color: '#eee' } },
          tooltip: {
            callbacks: {
              label: ctx => `${ctx.dataset.label}: ${ctx.parsed.x}`
            }
          }
        }
      }
    });

    // –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –∏—Å—Ç–µ–∫–∞—é—â–∏–º —Ç–∞—Ä–∏—Ñ–æ–º
    function changePage(delta) {
      const offsetInput = document.getElementById('expiringOffset');
      let offset = parseInt(offsetInput.value) || 0;
      const limit = parseInt(document.getElementById('expiringLimit').value) || 10;
      offset += delta * limit;
      if (offset < 0) offset = 0;
      offsetInput.value = offset;
      document.getElementById('paginationForm').submit();
    }
  </script>
</body>
</html>