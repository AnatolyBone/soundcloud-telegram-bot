// src/bot.js
import { Telegraf, Markup } from 'telegraf';
import * as commands from './bot/commands.js';
import * as hears from './bot/hears.js';
import * as actions from './bot/actions.js';
import { WEBHOOK_PATH } from './config.js';
import { getAllUsers, downloadQueue } from '../db.js'; // –ü–æ–¥–∫–ª—é—á–∞–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ –∏ –æ—á–µ—Ä–µ–¥—å—é
import { ADMIN_ID, WEBHOOK_URL } from '../config.js'; // –ü–æ–¥–∫–ª—é—á–∞–µ–º –∫–æ–Ω—Ñ–∏–≥–∏

const bot = new Telegraf(process.env.BOT_TOKEN);

bot.start(commands.start);

// –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É /admin –¥–ª—è –∞–¥–º–∏–Ω–æ–≤
bot.command('admin', async (ctx) => {
    if (ctx.from.id !== ADMIN_ID) return; // –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ–±—ã —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω –º–æ–≥ –≤—ã–ø–æ–ª–Ω–∏—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É

    try {
        // –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
        const users = await getAllUsers(true);
        const totalUsers = users.length;
        const activeUsers = users.filter(u => u.active).length;
        const totalDownloads = users.reduce((sum, u) => sum + (u.total_downloads || 0), 0);
        const now = new Date();
        const activeToday = users.filter(u => u.last_active && new Date(u.last_active).toDateString() === now.toDateString()).length;

        // –§–æ—Ä–º–∏—Ä—É–µ–º URL –¥–ª—è –∞–¥–º–∏–Ω–∫–∏
        const dashboardUrl = `${WEBHOOK_URL.replace(/\/$/, '')}/dashboard`;

        // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –∞–¥–º–∏–Ω–∞
        const message = `
üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ë–æ—Ç–∞</b>

üë§ <b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:</b>
   - –í—Å–µ–≥–æ: <i>${totalUsers}</i>
   - –ê–∫—Ç–∏–≤–Ω—ã—Ö –≤—Å–µ–≥–æ: <i>${activeUsers}</i>
   - –ê–∫—Ç–∏–≤–Ω—ã—Ö —Å–µ–≥–æ–¥–Ω—è: <i>${activeToday}</i>

üì• <b>–ó–∞–≥—Ä—É–∑–∫–∏:</b>
   - –í—Å–µ–≥–æ –∑–∞ –≤—Å–µ –≤—Ä–µ–º—è: <i>${totalDownloads}</i>

‚öôÔ∏è <b>–û—á–µ—Ä–µ–¥—å —Å–µ–π—á–∞—Å:</b>
   - –í —Ä–∞–±–æ—Ç–µ: <i>${downloadQueue.active}</i>
   - –í –æ–∂–∏–¥–∞–Ω–∏–∏: <i>${downloadQueue.size}</i>

üîó <a href="${dashboardUrl}">–û—Ç–∫—Ä—ã—Ç—å –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å</a>`;
        
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        await ctx.replyWithHTML(message.trim());
    } catch (e) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ /admin:', e);
        try {
            await ctx.reply('‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏.');
        } catch {}
    }
});

bot.command('admin', commands.admin);

bot.hears('üìã –ú–µ–Ω—é', hears.menu);
bot.hears('‚ÑπÔ∏è –ü–æ–º–æ—â—å', hears.help);
bot.hears('üîì –†–∞—Å—à–∏—Ä–∏—Ç—å –ª–∏–º–∏—Ç', hears.upgrade);
bot.hears('üéµ –ú–æ–∏ —Ç—Ä–µ–∫–∏', hears.myTracks);

bot.action('check_subscription', actions.checkSubscription);

bot.on('text', commands.text);

export { bot };