// services/notifier.js

import { findUsersToNotify, markAsNotified, updateUserField } from '../db.js';

let botInstance = null;

/**
 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –º–æ–¥—É–ª—å, –ø–µ—Ä–µ–¥–∞–≤–∞—è –µ–º—É —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞.
 * @param {Telegraf} bot - –≠–∫–∑–µ–º–ø–ª—è—Ä Telegraf.
 */
export function initNotifier(bot) {
    if (!bot) {
        throw new Error("–≠–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ notifier.");
    }
    botInstance = bot;
}

/**
 * –ó–∞–ø—É—Å–∫–∞–µ—Ç —Ñ–æ–Ω–æ–≤—ã–π –ø—Ä–æ—Ü–µ—Å—Å, –∫–æ—Ç–æ—Ä—ã–π —Ä–∞–∑ –≤ —á–∞—Å –ø—Ä–æ–≤–µ—Ä—è–µ—Ç,
 * –Ω–µ –ø–æ—Ä–∞ –ª–∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –∏—Å—Ç–µ—á–µ–Ω–∏–∏ –ø–æ–¥–ø–∏—Å–∫–∏.
 */
export async function startNotifier() {
    if (!botInstance) {
        console.error('üî¥ Notifier –Ω–µ –±—ã–ª –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω. –í—ã–∑–æ–≤–∏—Ç–µ initNotifier(bot) –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º.');
        return;
    }
    
    console.log('üöÄ –ó–∞–ø—É—Å–∫ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π...');
    
    let lastNotificationDate = null; 

    const checkAndNotify = async () => {
        const now = new Date();
        const currentHour = now.getUTCHours();
        const currentDate = now.toISOString().slice(0, 10);

        // –£—Å–ª–æ–≤–∏–µ –¥–ª—è –∑–∞–ø—É—Å–∫–∞: 10 —É—Ç—Ä–∞ –ø–æ UTC –∏ –≤ —ç—Ç—É –¥–∞—Ç—É –º—ã –µ—â–µ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–ª–∏
        if (currentHour === 10 && currentDate !== lastNotificationDate) {
            console.log(`[Notifier] –ù–∞—Å—Ç–∞–ª–æ –≤—Ä–µ–º—è –¥–ª—è –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–π —Ä–∞—Å—Å—ã–ª–∫–∏ (${currentDate}).`);
            lastNotificationDate = currentDate;

            try {
                const users = await findUsersToNotify(3); // –ò—â–µ–º —Ç–µ—Ö, —É –∫–æ–≥–æ —Ç–∞—Ä–∏—Ñ –∏—Å—Ç–µ–∫–∞–µ—Ç —á–µ—Ä–µ–∑ 3 –¥–Ω—è

                if (users.length === 0) {
                    console.log('[Notifier] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –Ω–µ—Ç.');
                    return;
                }

                console.log(`[Notifier] –ù–∞–π–¥–µ–Ω–æ ${users.length} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π. –ù–∞—á–∏–Ω–∞—é —Ä–∞—Å—Å—ã–ª–∫—É...`);
                for (const user of users) {
                    const daysLeft = Math.ceil((new Date(user.premium_until) - new Date()) / (1000 * 60 * 60 * 24));
                    const daysWord = daysLeft === 1 ? '–¥–µ–Ω—å' : (daysLeft > 1 && daysLeft < 5 ? '–¥–Ω—è' : '–¥–Ω–µ–π');
                    
                    const message = `üëã –ü—Ä–∏–≤–µ—Ç, ${user.first_name}!\n\n` +
                                    `–ù–∞–ø–æ–º–∏–Ω–∞–µ–º, —á—Ç–æ –≤–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞ –∏—Å—Ç–µ–∫–∞–µ—Ç —á–µ—Ä–µ–∑ ${daysLeft} ${daysWord}. ` +
                                    `–ù–µ –∑–∞–±—É–¥—å—Ç–µ –ø—Ä–æ–¥–ª–∏—Ç—å –µ–µ, —á—Ç–æ–±—ã —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º!\n\n` +
                                    `–ù–∞–∂–º–∏—Ç–µ /upgrade, —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–∞—Ä–∏—Ñ—ã.`;

                    try {
                        await botInstance.telegram.sendMessage(user.id, message);
                        await markAsNotified(user.id);
                        console.log(`‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${user.id}`);
                    } catch (e) {
                        if (e.response?.error_code === 403) {
                            console.warn(`[Notifier] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${user.id} –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –±–æ—Ç–∞. –î–µ–∞–∫—Ç–∏–≤–∏—Ä—É–µ–º...`);
                            await updateUserField(user.id, 'active', false);
                        } else {
                            console.error(`‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${user.id}:`, e.message);
                        }
                    }
                    await new Promise(resolve => setTimeout(resolve, 300));
                }
                console.log('[Notifier] –ï–∂–µ–¥–Ω–µ–≤–Ω–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.');
            } catch (e) {
                console.error('üî¥ –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ —Ä–∞—Å—Å—ã–ª–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π:', e);
            }
        }
    };

    // –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É —Å—Ä–∞–∑—É –∏ –ø–æ—Ç–æ–º –∫–∞–∂–¥—ã–π —á–∞—Å
    checkAndNotify();
    setInterval(checkAndNotify, 60 * 60 * 1000);
}